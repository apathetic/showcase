{
  "name": "generator-jekyllrb",
  "description": "Supercharge Jekyll development with Yeoman. Yo, Jekyllrb!",
  "version": "0.1.5",
  "homepage": "https://github.com/jdivock/generator-jekyllrb",
  "author": {
    "name": "Rob Wierzbowski",
    "email": "hello@robwierzbowski.com",
    "url": "http://robwierzbowski.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jdivock/generator-jekyllrb.git"
  },
  "bugs": {
    "url": "https://github.com/jdivock/generator-jekyllrb/issues"
  },
  "licenses": [
    {
      "type": "BSD-new"
    }
  ],
  "main": "app/index.js",
  "engines": {
    "node": ">=0.8.0",
    "npm": ">=1.2.10"
  },
  "scripts": {
    "test": "mocha"
  },
  "dependencies": {
    "yeoman-generator": "~0.13.4",
    "globule": "~0.1.0",
    "shelljs": "~0.1.4",
    "chalk": "~0.2.0"
  },
  "peerDependencies": {
    "yo": ">=1.0.4",
    "generator-mocha": "~0.1.1"
  },
  "devDependencies": {
    "mocha": "~1.12.0"
  },
  "keywords": [
    "yeoman-generator",
    "jekyll",
    "jekyllrb",
    "static",
    "front-end",
    "web",
    "site",
    "h5bp",
    "sass",
    "compass",
    "coffeescript",
    "autoprefixer"
  ],
  "readme": "# Generator-jekyllrb \n\n**Supercharge Jekyll development with Yeoman. Yo, Jekyllrb!**\n\nGenerator-jekyllrb wraps the [Jekyll](http://jekyllrb.com/) static site generator in a [Yeoman](http://yeoman.io/) development workflow. Scaffold your site with Yo, manage front end packages with [Bower](http://bower.io/), and automate development and build tasks with [Grunt](http://gruntjs.com/). \n\nGenerator-jekyllrb is ideal for developing performant static sites and prototyping dynamic sites and apps (especially if the final version uses Yeoman too). It's also a great introduction to Yeoman if you're not familiar with JavaScript MV* frameworks.\n\n## Features\n\n**During setup you can choose:**\n\n- [Compass](http://compass-style.org/), [Sass](http://sass-lang.com/), or vanilla CSS\n- [CoffeeScript](http://coffeescript.org/) or vanilla JavaScript\n- Automatic CSS vendor prefixing with [Autoprefixer](https://github.com/ai/autoprefixer)\n- Default Jekyll or [HTML5 Boilerplate](http://html5boilerplate.com/) templates\n- Common Jekyll configuration options\n\n**Generator-jekyllrb always includes:**\n\n- Built in preview server with LiveReload\n- Automatic Jekyll and preprocessor compiling\n- Code quality checks with [Jshint](http://www.jshint.com/) and/or [CoffeeLint](http://www.coffeelint.org/), [CssLint](http://csslint.net/), and `jekyll doctor`\n- An automatic build process that includes concatenation, image optimization, CSS and HTML minification, JS uglification, and asset revving to bust those caches\n\n## Getting Started\n\n- generator-jekyllrb requires [Node.js](http://nodejs.org/) `>= 0.10`, [Ruby](http://www.ruby-lang.org/) `>= 1.9`, and the [Bundler](http://gembundler.com/) gem\n- Install the generator: `npm install -g generator-jekyllrb`\n- Run: `yo jekyllrb`\n\n## Grunt Workflow\n\n#### grunt serve\n\nCompiles all files and opens the site in your default browser. A watch task watches for changes to files, recompiles if necessary, and injects the changes into the browser with LiveReload.\n\n#### grunt check\n\nChecks code quality with Jshint and CSS Lint, and Jekyll health with `jekyll doctor`.\n\n#### grunt build\n\nBuilds an optimized site to the dist directory. [Usemin blocks](https://github.com/yeoman/grunt-usemin#the-useminprepare-task) are concatenated, [CSS](https://github.com/gruntjs/grunt-contrib-cssmin), [images](https://github.com/gruntjs/grunt-contrib-imagemin), and [HTML](https://github.com/gruntjs/grunt-contrib-htmlmin) are minified, [JavaScript is uglified](https://github.com/gruntjs/grunt-contrib-uglify), and assets are [revved](https://github.com/yeoman/grunt-filerev) for cache busting.\n\n`grunt serve:dist` will run `grunt build` and open the result in your default browser\n\n#### grunt deploy\n\nDuring scaffolding the generator gives you the option to configure [grunt-build-control](https://github.com/robwierzbowski/grunt-build-control) to version and deploy your built code to a remote repository. If you configure build-control, `grunt deploy` will run `grunt check`, `grunt test`, `grunt build`, and then commit and deploy your built code to the specified remote repository. \n\n#### grunt (default)\n\n`grunt` on its own is a special task that runs `grunt check`, any tests you've added, and `grunt build`.\n\n#### Individual tasks and :targets\n\nEvery task and target in the Gruntfile can be run individually (e.g., `grunt jshint:all` or `grunt compass:server`). Edit the tasks and [add new ones to fit your needs](http://gruntjs.com/configuring-tasks).\n\n## Bower, components, and Usemin\n\n[Bower](http://bower.io/) is a package manager for front-end components. Use it to download and manage CSS, JavaScript, and [preprocessor tools](https://github.com/Team-Sass) for your site.Â Everything in the _bower_components directory is available while running `grunt serve`.\n\nTo include components in the build, place them inside of a Usemin block or add them to the `copy:dist` task. This workflow will be streamlined with the release of Usemin 2.0.\n\n## More on Yeoman and Grunt\n\n[Getting started with Yeoman](http://yeoman.io/gettingstarted.html)  \n[Getting started with Grunt](http://gruntjs.com/getting-started)\n\n## Migrating an existing site\n\nWrapping an existing site in Yeoman isn't hard, but it takes a little manual editing.\n\n1. Generate a new Yeoman/Jekyll app with the same tools and directory structure as your own. Ignore the templating options.\n2. Transfer any custom configuration from your _config.yml to the newly generated _config.yml.\n3. If you're using Compass, transfer custom configuration from your config.rb to the `compass` task in the Gruntfile.\n5. Delete everything inside the Yeoman app directory.\n4. Delete your site's original _config.yml, config.rb, and any files generated by Jekyll, CSS preprocessors, or CoffeeScript. Copy the remaining site into the app directory\n6. Test that everything is working correctly by running `grunt serve`, `grunt dist`, and `grunt serve:dist`. Check that the files you expect are being transferred to the dist directory.\n7. If you were versioning the _site directory, move its .git folder to the dist directory.\n\n## Notes\n\n#### Nested asset directories and Jekyll\n\nJekyll [can't exclude nested directories](https://github.com/jekyll/jekyll/issues/906), so we must exclude all directories that match the innermost asset directory. For example, `assets/css` will exclude all directories named `css` from Jekyll compilation. This will cause issues if your site has a tag or category named `css`; if you're worried about accidental exclusions prefix all asset directories with an underscore (`assets/_css`).\n\n#### Absolute path to assets in CSS\n\nSince we revision assets such as images, make sure that your CSS calls them using their absolute path, so on ``grunt build`` those images will be replaced properly.\n\nIncorrect:\n```css\nbody {\n  background: url('../images/foo.jpg');\n}\n```\n\nCorrect:\n```css\nbody {\n  background: url('/images/foo.jpg');\n}\n```\n\n\n## Contribute\n\n**[Please read the contributing guidelines before posting an issue.](https://github.com/robwierzbowski/generator-jekyllrb/blob/master/CONTRIBUTING.md)**\n\nPost bugs and feature requests to the [Github issue tracker](https://github.com/robwierzbowski/generator-jekyllrb/issues). In lieu of a formal styleguide, take care to maintain the existing coding style. Lint and test your code using [Grunt](https://github.com/gruntjs/grunt).\n\n## Release History\n\n[Changelog](//github.com/robwierzbowski/generator-jekyllrb/blob/master/CHANGELOG)\n\n## License\n[BSD-new](http://en.wikipedia.org/wiki/BSD_License)\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/robwierzbowski/generator-jekyllrb/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n",
  "readmeFilename": "README.md",
  "_id": "generator-jekyllrb@0.1.5",
  "dist": {
    "shasum": "96608d6b42909064f8612538a6bd510ea56eb617"
  },
  "_resolved": "git://github.com/jdivock/generator-jekyllrb#b57464e4b4184ca376bb9adfc2cbe003180258c2",
  "_from": "git://github.com/jdivock/generator-jekyllrb",
  "_fromGithub": true
}
